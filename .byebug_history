c
y
x
self.game_board
c
n 1
moved
n 1
moved
n 1
moved
n 1
moved
n 1
moved
n 1
moved
n 1
moved
n 1
moved
n 1
turn
moved
n 1
moved
n 1
moved
n 1
moved
n 1
y
x
step
n 1
c
self.turn
n 1
valid
c
best_y
best_x
c
sc_2
c
sc_1
c
sc_2
sc_1
c
backup
c
backup
c
backup
c
asdf
asdf = b
b
self.game_board
c
asf
asf = b
b
self.game_board
c
self.game_board
c
self.game_board
c
asdf
asdf = b
b
\b
b()
b
self.game_board
c
self.game_board
c
self.game_board
c
best_x
c
move(best_x, best_y)
best_y
best_x
c
self.game_board
self.game_board[x][y]
n 1
self.game_board[x][y]
c
turn
c
self.game_board[x][y]
c
turn
c
self.game_board[x][y]
n 1
turn
c
game_board
turn
c
turn
c
cc
c
turn
self.game_board
c
distance
self.game_board[x][y] == turn
y >= self.game_board[0].size || x >= self.game_board.size || self.game_board[x][y] == 0
y = y+1
x = x+1
self.game_board[x+1][y+1]
y
x
self.game_board
self.game_board[x][y] == 0
y >= self.game_board[0].size
y >= self.game_board[0].size || x >= self.game_board.size || self.game_board[x][y] == 0
y+1
x+1
y
x
c
self.game_board[x][y]
y
x
n 1
step
help
e
n 1
moved
c
moved
c
n 1
help
moved
c
moved
c
y
x
c
y
x
c
cc
c
"#{best_x} - #{best_y}"
c
"#{best_x} - #{best_y}"
c
"#{best_x} - #{best_y}"
c
"#{best_x} - #{best_y}"
c
"#{best_x} - #{best_y}"
c
"#{best_x} - #{best_y}"
c
"#{best_x} - #{best_y}"
c
"#{best_x} - #{best_y}"
c
"#{best_x} - #{best_y}"
best_y
c
best_y
best_x
c
best_x
c
best_y
best_x
c
y
x
best_x
c
y
x
best_x
c
best_y
best_x
c
y
x
best_y
best_x
c
y
x
c
exit
c
best_x
best_y
c
best_x
best_y
c
best_x
best_y
c
@game
c
@game
c
@game.save
@game
c
turn
rakturn
c
y
x
c
game_board[2]
game_board[1]
game_board[0]
railgame_board
